[DEFAULT]
bind_ip = 0.0.0.0
bind_port = 8080
workers = 0
# log_address = /dev/log
# log_facility = LOG_LOCAL2
log_headers = false
log_level = ERROR
log_name = proxy-server
user = swift
eventlet_debug = false

[pipeline:main]
# pipeline = catch_errors gatekeeper healthcheck proxy-logging cache etag-quoter listing_formats bulk tempurl ratelimit s3api tempauth staticweb copy container-quotas account-quotas slo dlo versioned_writes symlink proxy-logging proxy-server
pipeline = catch_errors healthcheck proxy-logging cache listing_formats authtoken s3api s3token keystoneauth bulk tempauth tempurl copy slo dlo versioned_writes symlink proxy-logging proxy-server

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:proxy-logging]
use = egg:swift#proxy_logging

[filter:bulk]
use = egg:swift#bulk

# [filter:ratelimit]
# use = egg:swift#ratelimit

# [filter:crossdomain]
# use = egg:swift#crossdomain

[filter:dlo]
use = egg:swift#dlo

[filter:slo]
use = egg:swift#slo

[filter:tempurl]
use = egg:swift#tempurl

[filter:tempauth]
use = egg:swift#tempauth

# So that tempauth can co-exist with authtoken
allow_overrides = true
reseller_prefix = TMP

#   user_<account>_<user> = <password> [group] [group] [...] [storage_url]
# or if you want underscores in <account> or <user>, you can base64 encode them
# (with no equal signs) and use this format:
#   user64_<account_b64>_<user_b64> = <password> [group] [group] [...] [storage_url]
# There are special groups of:
#   .reseller_admin = can do anything to any account for this auth
#   .admin = can do anything within the account
# The trailing optional storage_url allows you to specify an alternate url to
# hand back to the user upon authentication. If not specified, this defaults to
# $HOST/v1/<reseller_prefix>_<account> where $HOST will do its best to resolve
# to what the requester would need to use to reach this host.
user_admin_admin = admin .admin .reseller_admin
user_test_tester = testing .admin
user_test_tester2 = testing2 .admin
user_test2_tester2 = testing2 .admin
user_test_tester3 = testing3
user_test5_tester5 = testing5 service

[filter:authtoken]
ps axf# https://docs.openstack.org/swift/wallaby/overview_auth.html#keystone-auth
paste.filter_factory = keystonemiddleware.auth_token:filter_factory
auth_url = http://localhost:5000
www_authenticate_uri = http://localhost:5000
auth_plugin = password
service_token_roles_required = True

# The following credentials must match the Keystone credentials for the Swift
# service and may need to be changed to match your Keystone configuration. The
# example values shown here assume a user named 'swift' with admin role on a
# project named 'service', both being in the Keystone domain with id 'default'.
# Refer to the keystonemiddleware documentation link above [1] for other
# examples.
project_domain_id = default
user_domain_id = default
project_name = service
username = swift
password = veryfast
# delay_auth_decision defaults to False, but leaving it as false will
# prevent other auth systems, staticweb, tempurl, formpost, and ACLs from
# working. This value must be explicitly set to True.
delay_auth_decision = True
cache = swift.cache

[filter:keystoneauth]
use = egg:swift#keystoneauth
reseller_prefix = AUTH
operator_roles = admin,user
reseller_admin_role = ResellerAdmin
allow_overrides = true
default_domain_id = default
allow_names_in_acls = true

# [filter:staticweb]
# use = egg:swift#staticweb

# [filter:account-quotas]
# use = egg:swift#account_quotas

# [filter:container-quotas]
# use = egg:swift#container_quotas

[filter:cache]
use = egg:swift#memcache

# [filter:etag-quoter]
# use = egg:swift#etag_quoter
# enable_by_default = false

[filter:gatekeeper]
use = egg:swift#gatekeeper

[filter:versioned_writes]
use = egg:swift#versioned_writes
allow_versioned_writes = true
allow_object_versioning = true

[filter:copy]
use = egg:swift#copy

[filter:listing_formats]
use = egg:swift#listing_formats

[filter:symlink]
use = egg:swift#symlink

# To enable, add the s3api middleware to the pipeline before tempauth
# [filter:s3api]
# use = egg:swift#s3api
# cors_preflight_allow_origin = *

# Example to create root secret: `openssl rand -base64 32`
[filter:keymaster]
use = egg:swift#keymaster
encryption_root_secret = 81b26ff965f39aade6b0ee59a0e13e77

# To enable use of encryption add both middlewares to pipeline, example:
# <other middleware> keymaster encryption proxy-logging proxy-server
[filter:encryption]
use = egg:swift#encryption

[filter:s3api]
use = egg:swift#s3api

[filter:s3token]
use = egg:swift#s3token
auth_uri = http://localhost:5000/v3

[app:proxy-server]
use = egg:swift#proxy
allow_account_management = false
account_autocreate = true
